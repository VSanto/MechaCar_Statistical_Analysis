install.packages("shiny")
# Assign names to a vector
# Assign months to precipitation as names
names(precipitation) <- months
source("C:/Users/Valerie/Desktop/vandy/vu-virt-data-pt-12-2021-u-b/Activities/Week_15/1/Activities/03_Ins_Vectors/Solved/vectors.R")
# Assign names to a vector
# Assign months to precipitation as names
names(precipitation) <- months
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
sample_csv <- read_csv("data.csv")
sample_csv <- read_csv("data.csv")
setwd("vandy/")
library(tidyverse)
library(tidyverse)
sample_csv <- read_csv("data.csv")
getwd()
setwd("desktop/")
help(working directory)
install.packages("learnr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data(diamonds, package='ggplot2')
nrow(diamonds)
nrow(diamonds)
head(diamonds, 10)
tail(diamonds, 10)
slice(diamonds, 1:7)
slice(diamonds, 3)
slice(diamonds, c(1,7))
select(diamonds, carat, price)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data(diamonds, package='ggplot2')
nrow(diamonds)
head(diamonds, 10)
tail(diamonds, 10)
slice(diamonds, 1:7)
slice(diamonds, 3)
slice(diamonds, c(1,7))
select(diamonds, carat, price)
filter(diamonds, cut=='Ideal')
filter(diamonds, (cut=='Ideal' & price > 500))
total_volume <- mutate(diamonds, x * y * z)
total_volume
# In R, variables can contain periods
total.volume2 <- mutate(diamonds, total.volume=(x*y*z))
total.volume2
summarize(diamonds, mean(price))
cut <- group_by(diamonds, cut)
summarize(cut, mean(price), sum(price))
summarize(cut, avg=mean(price),number=n())
cut2 <- group_by(diamonds, cut, color)
cut2_summary <- summarize(cut2, mean(price))
cut2_summary
count(diamonds, cut)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data(diamonds, package='ggplot2')
MechaCar_mpg <- read.csv("C:/Users/Valerie/Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis/MechaCar_mpg.csv")
View(MechaCar_mpg)
View(MechaCar_mpg)
View(MechaCar_mpg)
library(jsonlite)
library(dplyr)
?lm()
lm(qsec ~ hp,mtcars) #create linear model
lm(qsec ~ hp,mtcars) #create linear model
lm(qsec ~ hp,MechaCar_mpg) #create linear model
lm(qsec ~ hp,MechaCar_mpg.csv) #create linear model
summary(lm(qsec~hp,hp,MechaCar_mpg.csv)) #summarize linear model
lm(qsec ~ hp,MechaCar_mpg.csv) #create linear model
summary(lm(qsec~hp,hp,MechaCar_mpg)) #summarize linear model
q()
x <- 3
x <- 3
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
library(dplyr)
spark_install(version = "2.4.3", hadoop_version = "2.7")
sc <- spark_connect(master = "local")
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
library(dplyr)
sc <- spark_connect(master = "local")
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
library(dplyr)
sc <- spark_connect(master = "local")
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csb', check.names=F, stringSaFactors = F)
demo_table <- read.csv(file='MechCar_Statictical_Analysis/demo.csv', check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='C:/Users/Valerie/Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis/demo.csv',check.names=F,stringsAsFactors = F)
demo_table2 <- read.csv(file='C:/Users/Valerie/Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis/demo.JSON')
demo_table2 <- fromJSON(file='C:/Users/Valerie/Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis/demo.json',check.names=F,stringsAsFactors = F)
demo_table2 <- fromJSON(txt='C:/Users/Valerie/Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis/demo.json')
View(demo_table2)
View(demo_table2)
View(demo_table)
View(demo_table2)
View(demo_table)
demo_table2 <- fromJSON(txt='C:/Users/Valerie/Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis/demo.json')
demo_table2 <- fromJSON(txt='Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis/demo.json')
View(demo_table2)
demo_table <- fromJSON(text='C:/Users/Valerie/Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis/demo.json')
install packages()
install.packages()
demo_table2 <- fromJSON(text='C:/Users/Valerie/Desktop/Challenges/Module_15/MechCar_Statistical_Analysis/demo.json')
library(jsonlite)
View(demo_table2)
?fromJSON()
?fromJSON()
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
library(dplyr)
sc <- spark_connect(master = "local")
?fromJSON
View(demo_table2)
View(demo_table2)
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='C:/Users/Valerie/Desktop/Challenges/Module_15?MechaCar_Statistical.Anaylisis/demo.json')
View(demo_table2)
demo_table2 <- fromJson(txt='C:\Users\Valerie\Desktop\Challenges\Module_15\MechaCar_Statistical_Analysis/demo.json')
demo_table2 <- fromJson(txt='C:\Users\Valerie\Desktop\Challenges\Module_15\MechaCar_Statistical_Analysis\demo.json')
demo_table2 <- fromJson(txt='C:\Users\Valerie\Desktop\Challenges\Module_15\MechaCar_Statistical_Analysis\demo.json')
demo_table2 <- fromJson(txt="C:\Users\Valerie\Desktop\Challenges\Module_15\MechaCar_Statistical_Analysis\demo.json')
demo_table2 <- fromJson(txt="Module_15\MechaCar_Statistical_Analysis\demo.json")
demo_table2 <- fromJson(txt="\Module_15\MechaCar_Statistical_Analysis\demo.json")
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='C:\Users\Valerie\Desktop\Challenges\Module_15\MechCar_Statistical_Analysis\demo.json')
library(tidyverse)
demo_table2 <- fromJSON(txt='C:\Users\Valerie\Desktop\Challenges\Module_15\MechCar_Statistical_Analysis\demo.json')
demo_table2 <- fromJSON(txt=\Users\Valerie\Desktop\Challenges\Module_15\MechCar_Statistical_Analysis\demo.json')
demo_table2 <- fromJSON(txt=\'Users\Valerie\Desktop\Challenges\Module_15\MechCar_Statistical_Analysis\demo.json')
demo_table2 <- fromJSON(txt='Users\Valerie\Desktop\Challenges\Module_15\MechCar_Statistical_Analysis\demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='MechCar_Statistical_Analysis\demo.json')
View(demo_table2)
View(demo_table2)
View(demo_table2)
demo_table2 <- fromJSON(txt='C:\Users\Valerie\Desktop\Module_15\MechaCar_Stitistical_Analysis\demo.json')
View(demo_table)
View(demo_table2)
?fromJSON()
library(jsonlite)
demo_table2 <- fromJSON(txt='C:\Users\Valerie\Desktop\Challenges\Module_15\MechaCar_Statistical_Analysis\demo.json')
View(demo_table2)
View(demo_table2)
View(demo_table2)
View(demo_table2)
View(demo_table2)
View(demo_table2)
View(demo_table)
setwd("C:/Users/Valerie/Desktop/Challenges/Module_15/MechaCar_Statistical_Analysis")
library(tidyverse)
library(dplyr)
MechaCar <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
summary(MechaCarlm)
MechaCarlm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar)
summary(MechaCarlm)
SuspensionCoil <- read.csv("Suspension_Coil.csv",stringsAsFactors = F, check.names = F)
total_summary <- SuspensionCoil %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
lot_summary <- SuspensionCoil %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups='keep')
t.test(SuspensionCoil$PSI,mu = 1500)
t.test(subset(SuspensionCoil,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
t.test(subset(SuspensionCoil,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
t.test(subset(SuspensionCoil,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
